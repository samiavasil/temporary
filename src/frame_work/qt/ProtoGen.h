/*TODO:
  This file should be moved from frame_work to target app.
  According this there should be updated and QProtocolLoader.
  This is only particlar example for MSG and PACKETS MAPING
*/
#ifdef GEN_MSG_ENUMS
#define ADD_MESSAGE(a,b,c,d)   a = b,
#define PACKET_DESC(a,b)
#define PACKET_DESC_END()
#define ADD_MESSAGE_TO_PACKET(a)
#endif
#ifdef  GEN_PKT_ENUMS
#define ADD_MESSAGE(a,b,c,d)
#define PACKET_DESC(a,b)       a = b,
#define PACKET_DESC_END()
#define ADD_MESSAGE_TO_PACKET(a)
#endif
#ifdef  GEN_MSGS
#define ADD_MESSAGE(a,b,c,d)   {a,c,d},
#define PACKET_DESC(a,b)
#define PACKET_DESC_END()
#define ADD_MESSAGE_TO_PACKET(a)
#endif
#ifdef GEN_MSGS_PKT_MAPS
#define ADD_MESSAGE(a,b,c,d)
#define PACKET_DESC(a,b)           msg_id_t arrea##a[]={
#define PACKET_DESC_END()          };
#define ADD_MESSAGE_TO_PACKET(a)   ((msg_id_t)a),
#endif

#ifdef GEN_PKTS
#define ADD_MESSAGE(a,b,c,d)
#define PACKET_DESC(a,b)        {a,arrea##a,(sizeof(arrea##a)/sizeof(msg_id_t))},
#define PACKET_DESC_END()
#define ADD_MESSAGE_TO_PACKET(a)
#endif


ADD_MESSAGE( AIN1_ENBLE,	  10,"",  1  )
ADD_MESSAGE( AIN2_ENBLE, 	  11,"",  1  )
ADD_MESSAGE( AIN1_GAIN, 	  12,"",  4  )
ADD_MESSAGE( AIN2_GAIN, 	  13,"",  4  )
ADD_MESSAGE( CURRENT_INPUT,   14,"",  1  )

ADD_MESSAGE( DREC1_ENABLE,	  15,"",  1  )
ADD_MESSAGE( DREC2_ENABLE,    16,"",  1  )
ADD_MESSAGE( DREC1_MAP_TO_AIN,17,"",  1  )
ADD_MESSAGE( DREC2_MAP_TO_AIN,18,"",  1  )
ADD_MESSAGE( DREC1_FREQ,      19,"",  32 )
ADD_MESSAGE( DREC2_FREQ,      20,"",  32 )
ADD_MESSAGE( DREC1_CFG,       21,"",  60 )
ADD_MESSAGE( DREC2_CFG,       22,"",  60 )

ADD_MESSAGE( DATA_CHAN1,      23,"",  64 )
ADD_MESSAGE( DATA_CHAN2,      24,"",  64 )

ADD_MESSAGE( TRANS_ENABLE,    25,"",  17 )
ADD_MESSAGE( TRANS_AMPL ,      26,"",  16 )
ADD_MESSAGE( TRANS_FREQ ,      27,"",  32 )
ADD_MESSAGE( TRANS_CFG  ,       28,"",  90 )

ADD_MESSAGE( MEASURE_MODE   ,    29,"",  4  )
ADD_MESSAGE( DATA_OUT_MODE   ,   30,"",  2  )
ADD_MESSAGE( MEASURE_STATE   ,	  31,"",  4  )
ADD_MESSAGE( FREQ_RANGE        ,      32,"", (3*32) )
ADD_MESSAGE( FREQ_SCALE_TYPE , 33,"",  2  )
ADD_MESSAGE( AC_AMPLITUDE     ,    34,"",  16 )
ADD_MESSAGE( DC_AMPLITUDE     ,    35,"",  16 )


PACKET_DESC( AIN_CFG_ID, 2 )
ADD_MESSAGE_TO_PACKET( AIN1_ENBLE )
ADD_MESSAGE_TO_PACKET( AIN2_ENBLE )
ADD_MESSAGE_TO_PACKET( AIN1_GAIN  )
ADD_MESSAGE_TO_PACKET( AIN2_GAIN  )
PACKET_DESC_END()

PACKET_DESC( EN_DREC_ID,3 )
ADD_MESSAGE_TO_PACKET( DREC1_ENABLE )
ADD_MESSAGE_TO_PACKET( DREC2_ENABLE )
ADD_MESSAGE_TO_PACKET( DREC1_FREQ )
ADD_MESSAGE_TO_PACKET( DREC2_FREQ )
PACKET_DESC_END()

PACKET_DESC( DREC_SET_CFG_ID,4 )
ADD_MESSAGE_TO_PACKET( DREC1_CFG )
ADD_MESSAGE_TO_PACKET( DREC2_CFG )
PACKET_DESC_END()

PACKET_DESC( DREC_SET_FREQ_ID,5 )
ADD_MESSAGE_TO_PACKET( DREC1_FREQ )
ADD_MESSAGE_TO_PACKET( DREC2_FREQ )
PACKET_DESC_END()


PACKET_DESC( CHANS_OUT_ID, 6 )
ADD_MESSAGE_TO_PACKET( DATA_CHAN1 )
ADD_MESSAGE_TO_PACKET( DATA_CHAN2 )
PACKET_DESC_END()

PACKET_DESC( TRANS_CFG_ID,7)
ADD_MESSAGE_TO_PACKET( TRANS_ENABLE )
ADD_MESSAGE_TO_PACKET( TRANS_AMPL )
ADD_MESSAGE_TO_PACKET( TRANS_FREQ )
ADD_MESSAGE_TO_PACKET( TRANS_CFG  )
PACKET_DESC_END()

PACKET_DESC( TRANS_SET_FREQ_ID,8 )
ADD_MESSAGE_TO_PACKET( TRANS_FREQ )
PACKET_DESC_END()

PACKET_DESC( DEVICE_MODE,9 )
ADD_MESSAGE_TO_PACKET( MEASURE_MODE )
ADD_MESSAGE_TO_PACKET( DATA_OUT_MODE )
ADD_MESSAGE_TO_PACKET( FREQ_RANGE )
ADD_MESSAGE_TO_PACKET( FREQ_SCALE_TYPE )
ADD_MESSAGE_TO_PACKET( AC_AMPLITUDE )
ADD_MESSAGE_TO_PACKET( DC_AMPLITUDE )
PACKET_DESC_END()

PACKET_DESC( DEVICE_OUTPUTS, 10 )
ADD_MESSAGE_TO_PACKET( DATA_CHAN1 )
ADD_MESSAGE_TO_PACKET( DATA_CHAN2 )
ADD_MESSAGE_TO_PACKET( MEASURE_STATE )
PACKET_DESC_END()


#undef ADD_MESSAGE
#undef PACKET_DESC
#undef PACKET_DESC_END
#undef ADD_MESSAGE_TO_PACKET
#undef GEN_MSG_ENUMS
#undef GEN_PKT_ENUMS
#undef GEN_MSGS_PKT_MAPS
#undef GEN_MSGS
#undef GEN_PKTS
