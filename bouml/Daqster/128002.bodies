class CFrameWork
!!!321026.cpp!!!	CFrameWork(in elementsFactory : CFrameWorkElementsFactory)
DEBUG("Create Frame Work Factory");
m_ElementsFactory = 0;                   
m_ControlView = 0;                                     
m_DataPlot    = 0;                                     
m_Executor    = 0;                                     
m_Protocol    = 0;                                     
m_PortIO      = 0;                                     
m_Colector    = 0;                                     
if( NO_ERR != attachElementsFactory(elementsFactory) ){
    /*TODO: throw exception maybe*/                    
    CRITICAL("Can't attach ElementsFactory");          
}                                                      
!!!321154.cpp!!!	~CFrameWork()
deattachCurrentElementsFactory();                           
!!!210818.cpp!!!	getPortIO() : CPortIO *
return m_PortIO;
!!!210946.cpp!!!	getColector() : CPacketCollector  *
return m_Colector;
!!!211074.cpp!!!	getProtocol() : CProtocolPackFactory *
return m_Protocol;
!!!217858.cpp!!!	geExecutor() : CCommandExecutor*
return m_Executor;
!!!217986.cpp!!!	getDataPlot() : CDataPlot *
return m_DataPlot;
!!!218114.cpp!!!	getControlView() : CControlView*
return m_ControlView;
!!!321282.cpp!!!	attachElementsFactory(in elementsFactory : CFrameWorkElementsFactory) : int
int ret = NO_ERR;                                                  
if( 0 != m_ElementsFactory ){                                      
    if( NO_ERR != deattachCurrentElementsFactory() ){              
        /*TODO - do someting in error*/                            
        DEBUG("Error when deattach ElementsFactory [%d]" , ret);   
        return ret;                                                
    }                                                              
}                                                                  
m_ElementsFactory = elementsFactory;                               
if( 0 != m_ElementsFactory ){                                      
    m_ControlView = m_ElementsFactory->createControlView();        
    m_DataPlot    = m_ElementsFactory->createDataPlot();           
    m_Executor    = m_ElementsFactory->createCommandExecutor();    
    m_Protocol    = m_ElementsFactory->createPrtocol();            
    m_PortIO      = m_ElementsFactory->createPortIO(CPortIO::SIMULATOR_IO);//TODO FIX ME            
    m_Colector    = m_ElementsFactory->createPacketCollector();                                                                
}                                                                  
else{                                                              
    DEBUG("Attach NULL to  ElementsFactory");                      
}                                                                  
return ret;                                                                                                            
!!!322178.cpp!!!	deattachCurrentElementsFactory() : int
int ret = NO_ERR;                                            
/*TODO - do some check and return error mayby in some cases*/
if( 0 != m_ElementsFactory ){                                
    if( 0 != m_Executor ){                                   
        m_ElementsFactory->deleteExecutor( m_Executor );     
    }                                                        
    if( 0 != m_Protocol ){                                   
        m_ElementsFactory->deleteProtocol(m_Protocol);       
    }                                                        
    if( 0 != m_PortIO ){                                     
        m_ElementsFactory->deletePortIO(m_PortIO);           
    }                                                        
    if( 0 != m_Colector ){                                   
        m_ElementsFactory->deleteColector(m_Colector);       
    }                                                        
    if( 0 != m_ControlView ){                                
        m_ElementsFactory->deleteControlView(m_ControlView); 
    }                                                        
    if( 0 != m_DataPlot ){                                   
        m_ElementsFactory->deleteDataPlot(m_DataPlot);       
    }                                                        
    delete m_ElementsFactory;                                
}                                                            
return ret;                                                  
