class CProtocolPackFactory
!!!142082.cpp!!!	CProtocolPackFactory(in pLoader : CProtocolLoader)
m_hDrLenBits       = 0;    
m_postFixLenBits   = 0;    
m_maxPacketSize    = 0;    
!!!400898.cpp!!!	attachProtocolLoader(in pLoader : CProtocolLoader) : int
  int ret = NO_ERR;
  if(  pLoader ) { 
     clearProtDefinitions();  
     pLoader->loadProtocolDefinition(this);   
  } 
  else{
     ret = WRONG_PARAMS;
 }
 return ret;
!!!158338.cpp!!!	createPacket(in packId : pack_id_t) : CPacket*
  CPacket * packet = NULL;

  if( PKT_ID_INVALID < packId ){                                                                                  
      return packet;                                                                                              
  }                                                                                                               
  int payloadLenBits=0;                                                                                           
  if( NO_ERR == packetPayloadBitLen(packId, &payloadLenBits )){                                                   
      packet = new CPacket( packId,payloadLenBits + getProtocolHeaderLenBits() + getProtocolPostFixLenBits() );   
      int num;                                                                                                    
      if( ( NO_ERR == getPacketMessagesNumber( packId,&num ) )&&( 0 < num ) ){                                    
          msg_id_t msgArr[num];
          if( NO_ERR == getPacketMessagesId( packId, msgArr, num ) ){                                             
              const u8 *data;                                                                                     
              for( int i=0; i < num; i++ ){                                                                       
                  if( NO_ERR != getMessage( msgArr[i], &data ) ){
                      CRITICAL( "Wrong Message Id[%d] for Packet Id[%d]",msgArr[i] , packId );
                      delete packet;
                      packet = NULL;
                      break;
                  }
                  if( NO_ERR != setPacketMessage( packet,msgArr[i], data ) ){
                      CRITICAL( "Can't set Message with Id[%d] for Packet with Id[%d]",msgArr[i] , packId );
                      delete packet;
                      packet = NULL;
                      break;
                  }
              }                                                                                                   
          }                                                                                                       

      }                                                                                                           
  }                                                                                                               
  return packet;            
!!!158466.cpp!!!	createPacketFromData(in data : u8) : CPacket*
  CPacket * packet = NULL;                                                                 
  if( NULL == data ){                                                                      
      return packet;                                                                       
  }                                                                                        

  packet = new CPacket( getPacketTypeFromData(data), getPacketLenFromData(data) );
  if( NO_ERR != packet->setData( data ) ){
      CRITICAL( "Can't create packet from data"  );
      delete packet;
      packet = NULL;
  }
  if( NO_ERR != checkPacketConsistency( packet ) ){
      delete packet;
      packet = NULL;
      CRITICAL( "Can't create packet: Data inconsistent."  );                              
  }                                                                                        
  return packet;                      
!!!244994.cpp!!!	setPacketMessage(in packet : CPacket, in msgId : msg_id_t, in data : u8) : int
  int ret = WRONG_PARAMS;
  int msgLen;                                                                 
  int offset;                                                                 
  if( ( NULL == packet )||( NULL == data ) ){                                 
      return ret;
  }                                                                           
  ret =  getMessageBitOffsetInPack( packet->packType() ,msgId , &offset );    
  if( NO_ERR == ret ){                                                        
      ret = getMessageBitLen( msgId, &msgLen );                               
      if( NO_ERR == ret ){                                                    
          ret = packet->setBits( offset, msgLen, data );                      
      }
      else{
          CRITICAL("Can't set Message bits in packet for msgID[%d]",msgId);
      }
  }
  else{
      CRITICAL("Can't get Message offset in packet for msgID[%d]",msgId);
  }
  return ret;
!!!245122.cpp!!!	getPacketMessage(in packet : CPacket, in msgId : msg_id_t, in retData : u8) : int
int ret;                                                                  
int msgLen;                                                               
int offset;                                                               
if( ( NULL == packet )||( NULL == retData ) ){                            
    return WRONG_PARAMS;                                                  
}                                                                         
ret =  getMessageBitOffsetInPack( msgId, packet->packType(), &offset );   
if( NO_ERR == ret ){                                                      
    ret = getMessageBitLen( msgId, &msgLen );                             
    if( NO_ERR == ret ){                                                  
        ret = packet->getBits( offset, msgLen, retData );                 
    }                                                                     
}                                                                         
return ret;                                                               
!!!158722.cpp!!!	getMaxPacketLen() : int
return m_maxPacketSize;
!!!159618.cpp!!!	setMaxPacketLen(in max_size : int) : void
m_maxPacketSize = max_size;
!!!245506.cpp!!!	getPacketHeader(in packet : CPacket, in header : u8) : int
if( ( NULL == packet )||( NULL == header ) ){                         
    return WRONG_PARAMS;                                              
}                                                                     
return packet->getBits( 0, getProtocolHeaderLenBits(), header );      
!!!252162.cpp!!!	getPacketPostFix(in packet : CPacket, in retPostFix : u8) : int
int ret =  WRONG_PARAMS;                                                     
int offset;                                                                  
if( ( NULL == packet )||( NULL == retPostFix ) ){                            
    return ret;                                                              
}                                                                            
offset = packet->packLenBits() - getProtocolPostFixLenBits();                
if( getProtocolHeaderLenBits() < offset ){                                   
   ret = packet->getBits( offset, getProtocolPostFixLenBits(), retPostFix ); 
}                                                                            
else{                                                                        
   CRITICAL("Not correct packet semantic");                                  
   ret = WRONG_DATA;                                                         
}                                                                            
return ret;                                                                  
!!!293250.cpp!!!	getProtocolHeaderLenBits() : int
return m_hDrLenBits;
!!!293378.cpp!!!	setProtocolHeaderLenBits(in lenBits : int) : void
m_hDrLenBits = lenBits;
!!!293506.cpp!!!	getProtocolPostFixLenBits() : int
return m_postFixLenBits;
!!!293634.cpp!!!	setProtocolPostFixLenBits(in lenBits : int) : void
m_postFixLenBits = lenBits;
