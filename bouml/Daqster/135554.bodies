class CProtocolPackFactory
!!!142082.cpp!!!	CProtocolPackFactory(in pLoader : CProtocolLoader)
m_hDrSize       = 0;                         
m_postFixSize   = 0;                         
m_maxPacketSize = 0;                         
if(  pLoader ) {                             
    pLoader->loadProtocolDefinition(this);   
}                                            
!!!158338.cpp!!!	createPacket(in packId : pack_id_t) : CPacket*
CPacket * packet = NULL;                                                                 
if( PKT_ID_INVALID < packId ){                                                           
    return packet;                                                                       
}                                                                                        
packet = new CPacket( packId, packetLen(packId), getProtocolHeaderLen(), getProtocolPostFixLen() ); 
int num = getPacketMessagesNumber(packId);                                               
if( 0 < num  ){                                                                          
    msg_id_t msgArr[num];                                                                
    if( NO_ERR == getPacketMessagesId( packId, msgArr, num ) ){                          
        const u8 *data;                                                                  
        for( int i=0; i < num; i++ ){                                                    
            if( NO_ERR == getMessage( msgArr[i], data ) ){                               
                setPacketMessage( packet,msgArr[i], data );                              
            }                                                                            
            else{                                                                        
               CRITICAL( "Wrong Message Id[%d] for Packet Id[%d]",msgArr[i] , packId );  
               delete packet;                                                            
               packet = NULL;                                                            
               break;                                                                    
            }                                                                            
        }                                                                                
    }                                                                                    
}                                                                                        
                                                                                         
return packet;                                                                           
!!!158466.cpp!!!	createPacketFromData(in data : u8) : CPacket*
CPacket * packet = NULL;                                                            
if( NULL == data ){                                                                 
    return packet;                                                                  
}                                                                                   
if( checkPacketConsistency( data ) ){                                               
  packet = new CPacket( getPacketTypeFromData(data), getPacketLenFromData(data),    
                        getProtocolHeaderLen()     , getProtocolPostFixLen()    );  
  if( NO_ERR != packet->setData( data ) ){                                          
      CRITICAL( "Can't create packet from data"  );               
      delete packet;                                                                
      packet = NULL;                                                                
  }                                                                                 
}                                                                                   
else{                                                                               
    CRITICAL( "Can't create packet: Data inconsistent."  );   
}                                                                                   
return packet;                                                                      
!!!244994.cpp!!!	setPacketMessage(in packet : CPacket, in msgId : msg_id_t, in data : u8) : int
int ret;                                                                    
int msgLen;                                                                 
int offset;                                                                 
if( ( NULL == packet )||( NULL == data ) ){                                 
    return WRONG_PARAMS;                                                    
}                                                                           
ret =  getMessageBitOffsetInPack( packet->packType() ,msgId , &offset );    
if( NO_ERR == ret ){                                                        
    ret = getMessageBitLen( msgId, &msgLen );                               
    if( NO_ERR == ret ){                                                    
        ret = packet->setBits( offset, msgLen, data );                      
    }                                                                       
}                                                                           
return ret;                                                                 
!!!245122.cpp!!!	getPacketMessage(in packet : CPacket, in msgId : msg_id_t, in retData : u8) : int
int ret;                                                                  
int msgLen;                                                               
int offset;                                                               
if( ( NULL == packet )||( NULL == retData ) ){                            
    return WRONG_PARAMS;                                                  
}                                                                         
ret =  getMessageBitOffsetInPack( msgId, packet->packType(), &offset );   
if( NO_ERR == ret ){                                                      
    ret = getMessageBitLen( msgId, &msgLen );                             
    if( NO_ERR == ret ){                                                  
        ret = packet->getBits( offset, msgLen, retData );                 
    }                                                                     
}                                                                         
return ret;                                                               
!!!158722.cpp!!!	getMaxPacketSize() : int
return m_maxPacketSize;
!!!159618.cpp!!!	setMaxPacketSize(in max_size : int) : void
m_maxPacketSize = max_size;
!!!245506.cpp!!!	getPacketHeader(in packet : CPacket, in header : u8) : int
if( ( NULL == packet )||( NULL == header ) ){                     
    return WRONG_PARAMS;                                          
}                                                                 
return packet->getBits( 0, getProtocolHeaderLen(), header );      
!!!245378.cpp!!!	setPacketHeader(in packet : CPacket, in header : u8) : int
if( ( NULL == packet )||( NULL == header ) ){                
    return WRONG_PARAMS;                                     
}                                                            
return packet->setBits( 0, getProtocolHeaderLen(), header ); 
!!!252034.cpp!!!	setPacketPostFix(in packet : CPacket, in postfix : u8) : int
int ret =  WRONG_PARAMS;                                                
int offset;                                                             
if( ( NULL == packet )||( NULL == postfix ) ){                          
    return WRONG_PARAMS;                                                
}                                                                       
offset = packet->packLen() - getProtocolPostFixLen();                   
if( getProtocolHeaderLen() < offset ){                                  
   ret = packet->setBits( offset, getProtocolPostFixLen(), postfix );   
}                                                                       
else{                                                                   
   CRITICAL("Not correct packet semantic");                             
   ret = WRONG_DATA;                                                    
}                                                                       
return ret;                                                             
!!!252162.cpp!!!	getPacketPostFix(in packet : CPacket, in retPostFix : u8) : int
int ret =  WRONG_PARAMS;                                                  
int offset;                                                               
if( ( NULL == packet )||( NULL == retPostFix ) ){                         
    return ret;                                                           
}                                                                         
offset = packet->packLen() - getProtocolPostFixLen();                     
if( getProtocolHeaderLen() < offset ){                                    
   ret = packet->getBits( offset, getProtocolPostFixLen(), retPostFix );  
}                                                                         
else{                                                                     
   CRITICAL("Not correct packet semantic");                               
   ret = WRONG_DATA;                                                      
}                                                                         
return ret;                                                               
!!!293250.cpp!!!	getProtocolHeaderLen() : int
return m_hDrSize;
!!!293378.cpp!!!	setProtocolHeaderSize(in size : int) : void
m_hDrSize = size;
!!!293506.cpp!!!	getProtocolPostFixLen() : int
return m_postFixSize;
!!!293634.cpp!!!	setProtocolPostFixLen(in size : int) : void
m_postFixSize = size;
