class QPacketCollector
!!!365186.cpp!!!	QPacketCollector(in cFwk : CFrameWork)
DEBUG("Create QPacketCollector");
!!!379778.cpp!!!	~QPacketCollector()
DEBUG("Destroy QPacketCollector");
while( m_PacketsList.count( ) ){
    delete m_PacketsList[0];
}
!!!364034.cpp!!!	getRecPacket() : int
DEBUG("TODO:Not implemented");
return 0;
!!!414466.cpp!!!	transmitPacket(in packet : CPacket) : int
int ret = WRONG_PARAMS;                                                     
CPortIO* port = m_fWork->getPortIO();                                       
CProtocolPackFactory*protocol = m_fWork->getProtocol();                     
if( port&&protocol ){                                                       
    protocol->addPacketHeader(packet);                                      
    protocol->addPacketPostFix(packet);                                     
    ret = port->write((const char *) packet->data(),packet->packLenBytes());
}                                                                           
return ret;                                                                 
!!!364290.cpp!!!	getRecPacketNum() : int
DEBUG("TODO:Not implemented");
return 0;
!!!371714.cpp!!!	receivedBytesSlot() : void
receiveBytes();
!!!364546.cpp!!!	appendReceivedBytes(in data : u8, in len : int64) : int
int ret = NO_ERR;                               
if( data ){                                     
    m_Data.append( (const char*) data, len );   
}                                               
else{                                           
    ret = WRONG_PARAMS;                         
}                                               
return ret;                                     
!!!364674.cpp!!!	collectPacket(in packet : CPacket) : int
int ret = NO_ERR;                                                                                          
static int a;                                                                                              
if( packet ){                                                                                              
    DEBUG("Append Packet pointer: TODO free pointer after usage  PackId[%d] num %d",packet->packType(),a); 
    if( 1 ){//packet ){
        const u8*data = packet->data();
        for( int i=0;i < packet->packLenBytes();i++ ){
            fprintf(stderr," %02x",data[i]);
        }
        fprintf(stderr,"\n\n");
    }
    a++;
    m_PacketsList.append( packet );
}                                                                                                          
else{                                                                                                      
    ret = WRONG_PARAMS;                                                                                    
}                                                                                                          
return ret;                            
!!!364802.cpp!!!	getNumberOfReceivedBytes() : int
return m_Data.size();
!!!421378.cpp!!!	lockData() : void
m_Mutex.lock();
!!!421634.cpp!!!	unlockData() : void
m_Mutex.unlock();
!!!364930.cpp!!!	getReceivedBytes() : const u8*
return (const u8*)m_Data.constData();
!!!365058.cpp!!!	removeReceivedBytes(in byteNum : int) : void
m_Data.remove(0,byteNum);
