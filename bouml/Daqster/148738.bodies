class QCommandExecutor
!!!174722.cpp!!!	QCommandExecutor(in parent : QObject = 0)
m_timer = NULL;
!!!328706.cpp!!!	~QCommandExecutor()
int ret = NO_ERR;                                              
DEBUG( "Destroy Command Executor" );                           
ret = startExecution( false );                                 
if( NO_ERR == ret){                                            
    if( false == wait( 1000 ) ){                               
        ret = SOME_ERROR;                                      
    }                                                          
}                                                              
if( NO_ERR != ret ){                                           
   DEBUG(" Can't terminate Command Executor thread corectly"); 
}                                                              
if( m_timer ){
    m_timer->deleteLater();
}
!!!173826.cpp!!!	appendCommand(in command : CCommand) : int
int ret = NO_ERR;                                     
if( command ){                                        
    QCommand* qcomm = (QCommand *)command;            
    /*TODO - Should add command type validation code*/
    if( qcomm ){                                      
      m_commands.append( qcomm );                     
    }                                                 
}                                                     
else{                                                 
    ret = WRONG_PARAMS;                               
}                                                     
return ret; 
!!!181890.cpp!!!	removeCommand(in comm : int) : int
int ret = WRONG_PARAMS;                   
QCommand * cmd = m_commands.takeAt(comm); 
if( cmd ){                                
    cmd->deleteLater();                   
    ret = NO_ERR;                         
}                                         
return ret;                               
!!!174210.cpp!!!	flushCommands() : void
QCommand * comm;                 
while( 0 < m_commands.count() ){ 
    comm = m_commands.takeAt(0); 
    if( comm ){                  
        comm->deleteLater();     
    }                            
}                                                          
!!!174338.cpp!!!	getCommNum() : int
return m_commands.count();
!!!173954.cpp!!!	pauseExecution(in pause : bool) : int
int ret = NO_ERR;                                  
lockObject();                                      
if( true == isRunning() ){                         
    if( m_timer ){                                 
        if( true == pause ){
            DEBUG("Pause Commands Execution loop");
            emit stopTimer();
        }                                          
        else{
            DEBUG("Run Command Execution loop");
            emit runTimer(m_CommandLoopTime);
        }                                          
    }                                              
    else{                                          
        ret = NULL_POINTER;                        
    }                                              
}                                                  
else{                                              
    /*Thread isn't running*/                       
    ret = SOME_ERROR;                              
}                                                  
unlockObject();                                    
return ret;             
!!!174082.cpp!!!	startExecution(in starting : bool) : int
if( true == starting ){     
    if( 0 == isRunning() ){ 
        start();            
    }                       
}                           
else{                       
    exit(0);                
}                                               
return NO_ERR;
!!!504962.cpp!!!	finish() : void

    startExecution( false );
    DEBUG("FINISH!!!! QCommandExecutor\n");
    if( false == wait( 10000 ) ){
       DEBUG("FINISH!!!! Not Finished QCommandExecutor\n");
    }
    else
    {
        DEBUG("FINISH!!!! FINISHED QCommandExecutor\n");
    }
  //  sleep(1);
!!!174466.cpp!!!	executeCommand(in comm_num : int) : int
int ret = 0;                                           
CCommand * comm = m_commands.value( comm_num, NULL);   
if( comm ){                                            
    ret = comm->handler();                             
}                                                      
return ret;                                            
!!!173570.cpp!!!	lockObject() : void
m_mutex.lock();
!!!173698.cpp!!!	unlockObject() : void
m_mutex.unlock();
!!!182402.cpp!!!	startTimer() : void
if( 0 == m_timer ){                         
     DEBUG("Timer isn't initialised");
} 
emit runTimer(m_CommandLoopTime);                                        
!!!174594.cpp!!!	run() : void
  int retCode = NO_ERR;
  DEBUG("Run Command Executor thread");
  lockObject();                                               
  retCode = initTimer();
  unlockObject();                                             
  retCode = exec();                                           
  DEBUG("Exit Command Executor Thread with code: %d",retCode);
!!!182274.cpp!!!	initTimer() : int
if( NULL == m_timer ){                                                                                       
    m_timer = new QTimer();                                                                                  
    m_timer->setSingleShot( true );                                                                          
    connect( this, SIGNAL(runTimer(int)),m_timer , SLOT( start(int) ),Qt::AutoConnection );                  
    connect( m_timer, SIGNAL(timeout()), this, SLOT( timerHandlerExecuteCommands() ),Qt::DirectConnection ); 
}                                                                                                            
return NO_ERR;                                                                                               
!!!181506.cpp!!!	timerHandlerExecuteCommands() : void
timerHandlerExecuteAllCommands();
